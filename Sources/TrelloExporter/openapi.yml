openapi: 3.0.0
info:
  title: Trello REST API
  version: 0.0.1
servers:
  - url: https://api.trello.com/1
components:
  securitySchemes:
    APIKeyAuth:
      in: query
      type: apiKey
      name: key
    APITokenAuth:
      in: query
      type: apiKey
      name: token
  schemas:
    Action:
      type: object
      properties:
        id:
          type: string
          $ref: "#/components/schemas/TrelloID"
        idMemberCreator:
          type: string
          $ref: "#/components/schemas/TrelloID"
        data:
          type: object
          properties:
            text:
              type: string
              example: Can never go wrong with bowie
            card:
              type: object
              properties:
                id:
                  type: string
                  $ref: "#/components/schemas/TrelloID"
                name:
                  type: string
                  example: Bowie
                idShort:
                  type: integer
                  example: 7
                shortLink:
                  type: string
                  example: 3CsPkqOF
            board:
              type: object
              properties:
                id:
                  type: string
                  $ref: "#/components/schemas/TrelloID"
                name:
                  type: string
                  example: Mullets
                shortLink:
                  type: string
                  example: 3CsPkqOF
            list:
              type: object
              properties:
                id:
                  type: string
                  $ref: "#/components/schemas/TrelloID"
                name:
                  type: string
                  example: Amazing
        type:
          type: string
          example: commentCard
        date:
          type: string
          format: date-time
          example: "2020-03-09T19:41:51.396Z"
        limits:
          type: object
          properties:
            reactions:
              type: object
              properties:
                perAction:
                  type: object
                  properties:
                    status:
                      type: string
                      example: ok
                    disableAt:
                      type: number
                      example: 1000
                    warnAt:
                      type: number
                      example: 900
                uniquePerAction:
                  type: object
                  properties:
                    status:
                      type: string
                      example: ok
                    disableAt:
                      type: number
                      example: 1000
                    warnAt:
                      type: number
                      example: 900
        display:
          type: object
          properties:
            translationKey:
              type: string
              example: action_comment_on_card
            entities:
              type: object
              properties:
                contextOn:
                  type: object
                  properties:
                    type:
                      type: string
                      example: translatable
                    translationKey:
                      type: string
                      example: action_on
                    hideIfContext:
                      type: boolean
                    idContext:
                      type: string
                      $ref: "#/components/schemas/TrelloID"
                card:
                  type: object
                  properties:
                    type:
                      type: string
                      example: card
                    hideIfContext:
                      type: boolean
                    id:
                      type: string
                      $ref: "#/components/schemas/TrelloID"
                    shortLink:
                      type: string
                      example: 3CsPkqOF
                    text:
                      type: string
                      example: Bowie
                comment:
                  type: object
                  properties:
                    type:
                      type: string
                      example: comment
                    text:
                      type: string
                      example: Can never go wrong with bowie
                memberCreator:
                  type: object
                  properties:
                    type:
                      type: string
                      example: member
                    id:
                      $ref: "#/components/schemas/TrelloID"
                    username:
                      type: string
                      example: bobloblaw
                    text:
                      type: string
                      example: Bob Loblaw (World)
        memberCreator:
          type: object
          properties:
            id:
              type: string
              $ref: "#/components/schemas/TrelloID"
              example: 5b02e7f4e1facdc393169f9d
            activityBlocked:
              type: boolean
              example: false
            avatarHash:
              type: string
              example: db2adf80c2e6c26b76e1f10400eb4c45
            avatarUrl:
              type: string
              format: url
              example: >-
                https://trello-members.s3.amazonaws.com/5b02e7f4e1facdc393169f9d/db2adf80c2e6c26b76e1f10400eb4c45
            fullName:
              type: string
              example: Bob Loblaw (Trello)
            idMemberReferrer:
              type: string
              $ref: "#/components/schemas/TrelloID"
              nullable: true
              example: null
            initials:
              type: string
              example: BL
            username:
              type: string
              example: bobloblaw
    APIKey:
      type: string
      pattern: ^[0-9a-fA-F]{32}$
      example: 0471642aefef5fa1fa76530ce1ba4c85
    APIToken:
      type: string
      example: 9eb76d9a9d02b8dd40c2f3e5df18556c831d4d1fadbe2c45f8310e6c93b5c548
    TrelloID:
      type: string
      pattern: ^[0-9a-fA-F]{24}$
      example: 5abbe4b7ddc1b351ef961414
      nullable: true
    Attachment:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/TrelloID"
          example: 5bc79d4206526d2279c1e6ea
        bytes:
          type: number
          nullable: true
        date:
          type: string
          format: date
          example: "2018-10-17T19:10:14.808Z"
        edgeColor:
          type: string
          nullable: true
        idMember:
          type: string
          $ref: "#/components/schemas/TrelloID"
          example: 5bc79d4206526d2279c1e6eb
        isUpload:
          type: boolean
          example: false
        mimeType:
          type: string
          example: ""
        name:
          type: string
          example: Deprecation Extension Notice
        previews:
          type: array
          items:
            type: object
          example: []
        url:
          type: string
          format: url
          example: "https://admin.typeform.com/form/RzExEM/share#/link"
        pos:
          type: number
          format: float
          example: 16384
    Card:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/TrelloID"
        address:
          type: string
          nullable: true
        badges:
          type: object
          properties:
            attachmentsByType:
              type: object
              properties:
                trello:
                  type: object
                  properties:
                    board:
                      type: number
                    card:
                      type: number
            location:
              type: boolean
            votes:
              type: integer
            viewingMemberVoted:
              type: boolean
              example: false
            subscribed:
              type: boolean
              example: false
            fogbugz:
              type: string
            checkItems:
              type: integer
              example: 0
            checkItemsChecked:
              type: integer
              example: 0
            comments:
              type: integer
              example: 0
            attachments:
              type: integer
              example: 0
            description:
              type: boolean
            due:
              type: string
              format: date
              nullable: true
            start:
              type: string
              format: date
              nullable: true
            dueComplete:
              type: boolean
        checkItemStates:
          type: array
          items:
            type: object
            properties:
              idCheckItem:
                $ref: "#/components/schemas/TrelloID"
              state:
                type: string
                enum:
                  - complete
                  - incomplete
        closed:
          type: boolean
        coordinates:
          type: string
          nullable: true
        creationMethod:
          type: string
          nullable: true
        dateLastActivity:
          type: string
          format: date-time
          example: "2019-09-16T16:19:17.156Z"
        desc:
          type: string
          example: |-
            ðŸ‘‹Hey there,

            Trello's Platform team uses this board to keep developers up-to-date.
        descData:
          type: object
          properties:
            emoji:
              type: object
        due:
          type: string
          format: date
          nullable: true
        dueReminder:
          oneOf:
            - type: number
            - type: string
          nullable: true
        idBoard:
          $ref: "#/components/schemas/TrelloID"
        idChecklists:
          type: array
          items:
            $ref: "#/components/schemas/TrelloID"
        idLabels:
          type: array
          items:
            $ref: "#/components/schemas/TrelloID"
        idList:
          $ref: "#/components/schemas/TrelloID"
        idMembers:
          type: array
          items:
            $ref: "#/components/schemas/TrelloID"
        idMembersVoted:
          type: array
          items:
            $ref: "#/components/schemas/TrelloID"
        idShort:
          type: integer
        idAttachmentCover:
          $ref: "#/components/schemas/TrelloID"
        labels:
          type: array
          items:
            $ref: "#/components/schemas/Label"
        limits:
          $ref: "#/components/schemas/Limits"
        locationName:
          type: string
          nullable: true
        manualCoverAttachment:
          type: boolean
          example: false
        name:
          type: string
          example: ðŸ‘‹ What? Why? How?
        pos:
          type: number
          format: float
          example: 65535
        shortLink:
          type: string
          example: H0TZyzbK
        shortUrl:
          type: string
          format: url
          example: https://trello.com/c/H0TZyzbK
        subscribed:
          type: boolean
          example: false
        url:
          type: string
          format: url
          example: https://trello.com/c/H0TZyzbK/4-%F0%9F%91%8B-what-why-how
        cover:
          type: object
          properties:
            idAttachment:
              $ref: "#/components/schemas/TrelloID"
            color:
              type: string
              nullable: true
            idUploadedBackground:
              type: boolean
              nullable: true
            size:
              type: string
              enum:
                - normal
            brightness:
              type: string
              enum:
                - light
                - dark
            isTemplate:
              type: boolean
              example: false
    Label:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/TrelloID"
        idBoard:
          $ref: "#/components/schemas/TrelloID"
        name:
          type: string
          description: The name displayed for the label.
          example: Overdue
          nullable: true
          minLength: 0
          maxLength: 16384
        color:
          type: string
          description: The color of the label. Null means no color and the label will not be shown on the front of Cards.
    LimitsObject:
      type: object
      properties:
        status:
          type: string
          enum:
            - ok
            - warning
        disableAt:
          type: number
          example: 36000
        warnAt:
          type: number
          example: 32400
    Limits:
      type: object
      properties:
        attachments:
          type: object
          properties:
            perBoard:
              $ref: "#/components/schemas/LimitsObject"
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
security:
  - APIKeyAuth: []
    APITokenAuth: []
paths:
  /boards/{boardId}/cards:
    get:
      tags: []
      summary: Get Cards on a Board
      description: Get all of the open Cards on a Board.
      operationId: getBoardCards
      parameters:
        - name: boardId
          in: path
          description: ""
          required: true
          schema:
            type: string
      deprecated: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Card"
  /cards/{cardId}/attachments:
    parameters:
      - name: cardId
        in: path
        description: The ID of the Card
        required: true
        schema:
          type: string
    get:
      tags: []
      summary: Get Attachments on a Card
      description: List the attachments on a card
      operationId: getCardAttachments
      parameters:
        - name: fields
          in: query
          description: "`all` or a comma-separated list of attachment [fields](/cloud/trello/guides/rest-api/object-definitions/)"
          required: false
          schema:
            type: string
            default: all
        - name: filter
          in: query
          description: Use `cover` to restrict to just the cover attachment
          required: false
          schema:
            type: string
            default: false
      deprecated: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Attachment"
  /cards/{id}:
    parameters:
      - name: id
        in: path
        description: The ID of the Card
        required: true
        schema:
          $ref: "#/components/schemas/TrelloID"
    get:
      tags: []
      summary: Get a Card
      description: Get a card by its ID
      operationId: getCard
      parameters:
        - name: fields
          in: query
          description: >-
            `all` or a comma-separated list of
            [fields](/cloud/trello/guides/rest-api/object-definitions/).
            **Defaults**: `badges, checkItemStates, closed, dateLastActivity,
            desc, descData, due, start, idBoard, idChecklists, idLabels, idList,
            idMembers, idShort, idAttachmentCover, manualCoverAttachment, labels,
            name, pos, shortUrl, url`
          required: false
          schema:
            type: string
        - name: actions
          in: query
          description: >-
            See the [Actions Nested
            Resource](/cloud/trello/guides/rest-api/nested-resources/#actions-nested-resource)
          required: false
          schema:
            type: string
        - name: attachments
          in: query
          description: "`true`, `false`, or `cover`"
          required: false
          schema:
            type: string
            oneOf:
              - type: string
                enum:
                  - cover
              - type: boolean
            default: false
        - name: attachment_fields
          in: query
          description: >-
            `all` or a comma-separated list of attachment
            [fields](/cloud/trello/guides/rest-api/object-definitions/)
          required: false
          schema:
            type: string
            default: all
        - name: members
          in: query
          description: Whether to return member objects for members on the card
          required: false
          schema:
            type: boolean
            default: false
        - name: member_fields
          in: query
          description: >-
            `all` or a comma-separated list of member
            [fields](/cloud/trello/guides/rest-api/object-definitions/).
            **Defaults**: `avatarHash, fullName, initials, username`
          required: false
          schema:
            type: string
        - name: membersVoted
          in: query
          description: Whether to return member objects for members who voted on the card
          required: false
          schema:
            type: boolean
            default: false
        - name: memberVoted_fields
          in: query
          description: >-
            `all` or a comma-separated list of member
            [fields](/cloud/trello/guides/rest-api/object-definitions/).
            **Defaults**: `avatarHash, fullName, initials, username`
          required: false
          schema:
            type: string
        - name: checkItemStates
          in: query
          description: ""
          required: false
          schema:
            type: boolean
            default: false
        - name: checklists
          in: query
          description: Whether to return the checklists on the card. `all` or `none`
          required: false
          schema:
            type: string
            default: none
        - name: checklist_fields
          in: query
          description: "`all` or a comma-separated list of `idBoard,idCard,name,pos`"
          required: false
          schema:
            type: string
            default: all
        - name: board
          in: query
          description: Whether to return the board object the card is on
          required: false
          schema:
            type: boolean
            default: false
        - name: board_fields
          in: query
          description: >-
            `all` or a comma-separated list of board
            [fields](/cloud/trello/guides/rest-api/object-definitions/#board-object).
            **Defaults**: `name, desc, descData, closed, idOrganization, pinned,
            url, prefs`
          required: false
          schema:
            type: string
        - name: list
          in: query
          description: >-
            See the [Lists Nested
            Resource](/cloud/trello/guides/rest-api/nested-resources/)
          required: false
          schema:
            type: boolean
            default: false
        - name: pluginData
          in: query
          description: Whether to include pluginData on the card with the response
          required: false
          schema:
            type: boolean
            default: false
        - name: stickers
          in: query
          description: Whether to include sticker models with the response
          required: false
          schema:
            type: boolean
            default: false
        - name: sticker_fields
          in: query
          description: >-
            `all` or a comma-separated list of sticker
            [fields](/cloud/trello/guides/rest-api/object-definitions/)
          required: false
          schema:
            type: string
            default: all
        - name: customFieldItems
          in: query
          description: Whether to include the customFieldItems
          required: false
          schema:
            type: boolean
            default: false
      deprecated: false
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Card"
  /cards/{cardId}/actions:
    get:
      tags: []
      summary: Get Actions on a Card
      description: List the Actions on a Card
      operationId: getCardActions
      parameters:
        - name: cardId
          in: path
          description: The ID of the Card
          required: true
          schema:
            $ref: "#/components/schemas/TrelloID"
        - name: filter
          in: query
          description: >-
            A comma-separated list of [action
            types](https://developer.atlassian.com/cloud/trello/guides/rest-api/action-types/).
          required: false
          schema:
            type: string
            default: "commentCard, updateCard:idList"
        - name: page
          in: query
          description: The page of results for actions. Each page of results has 50 actions.
          required: false
          schema:
            type: number
            maximum: 19
            default: 0
      deprecated: false
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Action"
